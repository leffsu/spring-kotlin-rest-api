buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
  }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'

repositories {
  mavenCentral()
}


dependencies {
  // Kotlin Dependencies
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

  // Spring Dependencies
  compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
    exclude module: "spring-boot-starter-tomcat"
  }
  compile "org.springframework.boot:spring-boot-starter-jetty:$springBootVersion"
  compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"

  // Jackson Dependencies
  compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
  compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
  compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
  runtime "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
  runtime "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
  runtime "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
}

task wrapper(type: Wrapper) {
  gradleVersion = "4.5.1"
}

test {
  testLogging {
    exceptionFormat = 'full'
    events = ["passed", "failed", "skipped"]
  }
}